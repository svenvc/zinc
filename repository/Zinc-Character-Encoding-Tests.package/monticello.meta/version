(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.12' message 'Added an optimalization to ZnUTF8Encoder>>#readInto:startingAt:count:fromStream: to avoid the price of #becomeForward: when a ByteString to WideString conversion happens' id '691abf05-9485-451a-aea0-6a3a08dd2939' date '06/11/2013' time '04:33:14' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.11' message 'merge' id '352e538c-d3c0-411c-be19-bb8e7181b391' date '06/11/2013' time '09:22:23' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.10' message 'Added an optimized ZnUTF8Encoder>>#decodeBytes: and an even faster #decodeBytesIntoWideString: (thx johnny/JanStruz)' id 'c4338bce-4823-4afd-9c03-ed82ddf2afff' date '06/10/2013' time '11:20:45' author 'SvenVanCaekenberghe' ancestors () stepChildren ())(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.9' message 'Added support to ZnUTF8Encoder to detect overlong (non-shortest form) encodings as well as to skip the Unicode Byte Order Mark (BOM) character' id '3cfdf396-c625-4c8f-9aea-ede90630edcb' date '06/04/2013' time '05:29:38' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.8' message 'Introduction of an explicit ZnInvalidUTF8 exception.' id '873f8d6a-5631-4dfb-8fb5-cda3e522c9ee' date '06/03/2013' time '08:15:02' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.7' message 'ZnUTF8Encoder:- enabled #next:putAll:startingAt:toStream: for real- added & enabled #optimizedReadInto:startingAt:count:fromStream:- #nextFromStream now signals specific errors on eof- some refactoring/cleanup' id 'dc085fe8-a4e4-46f4-a5c0-2678315e7428' date '05/25/2013' time '10:30:26' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.6' message 'Introduction of ZnCharacterEncoder>>#next:putAll:startingAt:toStream with optimized implementations in ZnNullEncoder and ZnUTF8Encoder for ByteString instances' id '49bd7fce-ffab-4c09-9bf3-a3c550090cab' date '05/22/2013' time '04:16:17' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.5' message 'Added String>>#urlEncoded & #urlDecoded - Thx Camillo Bruni' id 'c0387a62-53b8-421c-b74b-43d224d63afc' date '04/16/2013' time '09:19:26' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.4' message 'Bugfix to ZnPercentEncoder: always use 2 hex digits (Thanks Benjamin Van Ryseghem)' id 'a1f1c1f3-7878-45db-a609-0d4c3ff81e69' date '03/01/2013' time '09:36:51' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.3' message 'merging in some Gemstone portability changes by Ken Treis' id '9045618f-8b58-4d47-b6f8-8c18ca27869d' date '01/21/2013' time '01:16:18' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-KenTreis.2.1' message 'Minor changes for GemStone Compatibility that hopefully don''t break anything in Pharo:* Use `ByteArray new writeStream` rather than `#[] writeStream`* In ZnBase64EncoderTests, put CRs in for line breaks explicitly' id '0c541244-918a-4df3-9543-170b07bd6870' date '01/19/2013' time '11:05:42' author 'KenTreis' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.2' message 'stop using ZnNullEncoder for latin1;added #beLenient option to make a ZnByteEncoder non-strict (the old behavior)' id '5a82017c-5d0e-448c-a7a3-1b8f35aae2d2' date '12/17/2012' time '04:08:57' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.1' message 'creation of Zinc-Character-Encoding-[Core|Tests] by moving various classes out of Zinc-HTTP' id '9f23b0ec-9909-4839-b631-db4c10c9f613' date '12/16/2012' time '05:01:49' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())